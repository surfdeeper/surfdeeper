---
import Layout from "../layouts/Layout.astro";
import sections from "../content/guides/_sections.json";
import { loadHomepageData } from "../utils/homepage-data";

const {
  spots,
  guidesBySection,
  comingSoonCountBySection,
  recentCommits,
  recentlyUpdated,
} = await loadHomepageData();
---

<Layout
  title="Surf Deeper"
  description="Open source surfing guide for skills and spots. Community-driven knowledge for surfers of all levels."
>
  <div class="homepage-wrapper">
    <div class="marquee-container">
      <div class="marquee" id="surf-ticker">
        <span id="ticker-content">Loading surf conditions...</span>
      </div>
    </div>

    <div class="three-column-layout">
      <!-- Main Content -->
      <section class="content">
        <div class="main-content-grid">
          <div class="map-preview-section">
            <div id="map-preview" class="map-preview-container">
              <div
                id="spot-list-panel-homepage"
                class="spot-list-panel-homepage"
              >
                <h3>Spots on Map</h3>
                <ul id="spot-list-homepage"></ul>
              </div>
            </div>
          </div>
        </div>

        {/** Mobile-only quick sections below the map */}
        <div class="mobile-home-sections">
          <div class="card">
            <h3>üèÑ Explore the Skills Guide</h3>
            <p class="about-text">
              Learn fundamentals, techniques, and strategy. Short, practical
              guides for all levels.
            </p>
            <div class="sidebar-cta-wrap">
              <a href="/guide" class="btn btn-primary">Browse Guide ‚Üí</a>
            </div>
          </div>

          <div class="card">
            <h3>üí° About</h3>
            <p class="about-text">
              <strong>Free and open source</strong> ‚Äî Built by surfers, for surfers.
              Share your knowledge and help the community grow.
            </p>
            <div class="sidebar-cta-wrap">
              <a href="/contribute" class="btn btn-secondary">Contribute</a>
            </div>
          </div>

          {
            recentlyUpdated.length > 0 && (
              <div class="card updates-section">
                <h3>üìù Recently Updated</h3>
                <ul class="updates-list">
                  {recentlyUpdated.slice(0, 3).map((page) => (
                    <li class="update-item">
                      <a href={page.url} class="update-link">
                        <span class="page-hierarchy">{page.hierarchy}</span>
                        <span class="page-title">{page.title}</span>
                      </a>
                      <span class="update-date">
                        {new Date(page.date).toLocaleString("en-US", {
                          timeZone: "America/Los_Angeles",
                          month: "short",
                          day: "numeric",
                          year: "numeric",
                        })}
                      </span>
                    </li>
                  ))}
                </ul>
              </div>
            )
          }
        </div>
      </section>

      <!-- Left Sidebar -->
      <aside class="left-sidebar">
        <div class="card">
          <h3>üèÑ Skills Guide</h3>
          <ul class="sidebar-links nested-guide">
            {
              Object.entries(sections)
                .sort(([, a], [, b]) => a.order - b.order)
                .map(([slug, section]) => {
                  const guides = guidesBySection[slug] || [];
                  const visibleGuides = guides.slice(0, 3);
                  const remainingCount = guides.length - 3;

                  return (
                    <li class="section-item">
                      <a href={`/guide/${slug}`} class="section-link">
                        {section.label}
                      </a>
                      {guides.length > 0 && (
                        <ul class="nested-links">
                          {visibleGuides.map((guide) => (
                            <li>
                              <a href={guide.url}>{guide.title}</a>
                            </li>
                          ))}
                          {remainingCount > 0 && (
                            <li class="more-items">
                              <a href={`/guide/${slug}`}>
                                {remainingCount} more ‚Üí
                              </a>
                            </li>
                          )}
                          {comingSoonCountBySection[slug] > 0 && (
                            <li class="coming-soon-items">
                              {comingSoonCountBySection[slug]} coming soon
                            </li>
                          )}
                        </ul>
                      )}
                    </li>
                  );
                })
            }
          </ul>
          <div class="sidebar-cta-wrap">
            <a href="/guide" class="sidebar-cta">Browse All ‚Üí</a>
          </div>
        </div>
      </aside>

      <!-- Right Sidebar -->
      <aside class="right-sidebar">
        <div class="card">
          <h3>üí° About</h3>
          <p class="about-text">
            <strong>Free and open source</strong> ‚Äî Built by surfers, for surfers.
            <a href="/contribute">Contribute your knowledge</a> to help others learn
            and progress.
          </p>
        </div>

        <div class="card surf-wisdom">
          <h3>üßò Surf Wisdom</h3>
          <p class="wisdom-quote">
            "The best surfer out there is the one having the most fun."
          </p>
          <p class="wisdom-quote">
            "You can't stop the waves, but you can learn to surf."
          </p>
        </div>

        {
          recentlyUpdated.length > 0 && (
            <div class="card updates-section">
              <h3>üìù Recently Updated</h3>
              <ul class="updates-list">
                {recentlyUpdated.slice(0, 4).map((page) => (
                  <li class="update-item">
                    <a href={page.url} class="update-link">
                      <span class="page-hierarchy">{page.hierarchy}</span>
                      <span class="page-title">{page.title}</span>
                    </a>
                    <span class="update-date">
                      {new Date(page.date).toLocaleString("en-US", {
                        timeZone: "America/Los_Angeles",
                        month: "short",
                        day: "numeric",
                        year: "numeric",
                        hour: "numeric",
                        minute: "2-digit",
                        hour12: true,
                        timeZoneName: "short",
                      })}
                    </span>
                  </li>
                ))}
              </ul>
            </div>
          )
        }

        {
          recentCommits.length > 0 && (
            <div class="card updates-section">
              <h3>üî® Recent Commits</h3>
              <ul class="updates-list">
                {recentCommits.slice(0, 3).map((commit) => (
                  <li class="update-item">
                    <a
                      href={commit.url}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="update-link commit-link"
                    >
                      {commit.message.length > 60
                        ? commit.message.substring(0, 60) + "..."
                        : commit.message}
                    </a>
                    <span class="update-date">
                      {new Date(commit.isoDate).toLocaleString("en-US", {
                        timeZone: "America/Los_Angeles",
                        month: "short",
                        day: "numeric",
                        year: "numeric",
                        hour: "numeric",
                        minute: "2-digit",
                        hour12: true,
                        timeZoneName: "short",
                      })}
                    </span>
                  </li>
                ))}
              </ul>
            </div>
          )
        }
      </aside>
    </div>
  </div>
</Layout>

<link
  rel="stylesheet"
  href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
  crossorigin=""
/>
<script
  src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
  crossorigin=""
  defer></script>

<style>
  @import "../styles/homepage.css";
</style>

<script
  type="application/json"
  id="spots-data"
  set:html={JSON.stringify(
    spots.map((s) => ({
      title: s.data.title,
      description: s.data.description || "",
      latitude: s.data.latitude,
      longitude: s.data.longitude,
      slug: s.slug,
    })),
  )}
/>

<script>
  import { initializeMapPreview } from "../scripts/map-preview";

  // Initialize map preview
  initializeMapPreview();
</script>

<script>
  import { updateSurfTicker } from "../scripts/surf-ticker";

  // Initialize surf ticker
  if (
    document.readyState === "complete" ||
    document.readyState === "interactive"
  ) {
    updateSurfTicker();
  } else {
    document.addEventListener("DOMContentLoaded", updateSurfTicker);
  }

  // Refresh every 15 minutes
  setInterval(updateSurfTicker, 15 * 60 * 1000);
</script>
